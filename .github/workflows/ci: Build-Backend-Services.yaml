name: CI Docker Build and Push for Backend Services

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch: # Manual trigger
    inputs:
      RELEASE_VERSION:
        description: 'Release version (e.g., 1.0.0). The "v" prefix will be automatically added.'
        required: false
        default: ''

jobs:
  ci-build:
    name: CI Docker Build
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'  # Only run on push or PR, skip manual dispatch

    strategy:
      matrix:
        service: [fetch_company_details, fetch_infra_types, fetch_internal_env_details]

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Image Tag
      - name: Set up Docker Image Tag
        id: tag_step
        run: |
          DATE_TAG="v$(date +'%Y.%m.%d')"
          # Create a default tag for CI builds that isn't meant to be pushed
          NEW_TAG="${DATE_TAG}-ci"
          echo "Docker Tag: ${NEW_TAG}"
          echo "tag=${NEW_TAG}" >> "$GITHUB_OUTPUT"

      # Step 3: Build Docker Image (without push)
      - name: Build Docker Image (No Push)
        uses: docker/build-push-action@v5
        with:
          file: ./infra_env_dashboard/backend/services/${{ matrix.service }}/Dockerfile
          context: ./infra_env_dashboard/backend # Correct context for Dockerfile location
          push: false
          tags: |
            sam123ben/infra-dashboard-${{ matrix.service }}:${{ steps.tag_step.outputs.tag }}

  manual-build-push:
    name: Manual Docker Build and Push
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' # Only run on manual trigger

    strategy:
      matrix:
        service: [fetch_company_details, fetch_infra_types, fetch_internal_env_details]

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Validate Release Version
      - name: Validate Release Version
        run: |
          if [ -z "${{ github.event.inputs.RELEASE_VERSION }}" ]; then
            echo "Error: Please provide a valid release version for manual build and push."
            exit 1
          fi

      # Step 3: Set up Docker Image Tag
      - name: Set Docker Tag Based on Date and Release Version
        env:
          RELEASE_VERSION: ${{ github.event.inputs.RELEASE_VERSION }}
        run: |
          # Build the Docker tag based on the provided date and optional release version
          RELEASE_TAG="v${RELEASE_VERSION}"

          echo "Docker Tag (Release Version): ${RELEASE_TAG}"

          # Set output variables for GitHub Actions
          echo "release_tag=${RELEASE_TAG}" >> "$GITHUB_OUTPUT"

      # Step 4: Log in to Docker Hub using the Access Token
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PAT_TOKEN }}

      # Step 5: Build and Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          file: ./infra_env_dashboard/backend/services/${{ matrix.service }}/Dockerfile
          context: ./infra_env_dashboard/backend # Correct context for Dockerfile location
          push: true
          tags: |
            sam123ben/infra-dashboard-${{ matrix.service }}:latest
            sam123ben/infra-dashboard-${{ matrix.service }}:${{ steps.tag_step.outputs.release_tag }}